--Primer código de la mañana, donde declaramos una excepción:
DECLARE DIVIDE_ZERO EXCEPTION;

V_A INTEGER := 12;

V_B INTEGER := 10;

V_C NUMBER(5, 2) := 0;

BEGIN IF V_B = 0 THEN RAISE DIVIDE_ZERO;

END IF;

V_C := V_A / V_B;

dbms_output.put_line(V_C);

dbms_output.put_line('TERMINO BIEN');

EXCEPTION
WHEN DIVIDE_ZERO THEN dbms_output.put_line('CUIDADO QUE VAS A DIVIDIR POR CERO');

END;

--Un código para copiar la tabla:
DROP TABLE EMP_COPIA;

CREATE TABLE EMP_COPIA AS
SELECT
    *
FROM
    EMP;

/* CONTROLAR QUE UN JEFE NO PUEDA TENER MÁS DE 7 EMPLEADOS A SU CARGO */
CREATE
OR REPLACE TRIGGER NO_MAS_7 BEFORE --BEFORE|AFTER
INSERT
    OR
UPDATE
    OF MGR -- INSERT OR DELETE OR (UPDATE | UPDATE OF COLUMN)
    ON EMP_COPIA FOR EACH ROW DECLARE V_NUM_EMP INTEGER := 0;

BEGIN
SELECT
    COUNT(EMPNO) INTO V_NUM_EMP
FROM
    EMP_COPIA
WHERE
    MGR = :NEW.MGR;

IF V_NUM_EMP >= 7 THEN raise_application_error (
    -20001,
    'ESTE JEFE NO PUEDE TENER MAS DE 7 EMPLEADOS A SU CARGO'
);

END IF;

END;

/ SHOW ERRORS;

/* REALIZAR UNA FUNCIÓN QUE AL PASARLE UN TEXTO CON ACENTOS, ME LA DEVUELVA SIN ACENTOS.
 EL TEXTO DEBE ESTAR EN LA MISMA CAPITALIDAD QUE SE ENCONTRABA */
CREATE
OR REPLACE FUNCTION SIN_TILDE(pTEXTO VARCHAR2) RETURN VARCHAR2 IS BEGIN RETURN(TRANSLATE (pTEXTO, 'áéíóúÁÉÍÓÚ', 'aeiouAEIOU'));

END;

/
SELECT
    SIN_TILDE('ÁLóJá')
from
    dual;

/ DECLARE A VARCHAR2(100);

BEGIN A := SIN_TILDE('ÁLóJá');

dbms_output.put_line(A);

END;

/ --Preguntar el enunciado de lo que aquí abajo hay:
CREATE
OR REPLACE TRIGGER QUITA_TILDES BEFORE
INSERT
    OR
UPDATE
    OF ENAME ON EMP_COPIA FOR EACH ROW BEGIN :NEW.ENAME := SIN_TILTE(:NEW.ENAME);

:NEW.JOB := SIN_TILTE(:NEW.JOB);

END;
